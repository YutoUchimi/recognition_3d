<launch>

  <arg name="bag_file" />
  <arg name="obj_y" default="true" />
  <arg name="save_dir" default="~/data/mvtk/transparent_objects/raw_data_refrigerator/20180201/test" />
  <param name="/use_sim_time" value="true" />

  <node name="rosbag_play"
        pkg="rosbag" type="play"
        args="$(optenv HOME)/$(arg bag_file) --clock --loop" />

  <include file="$(find openni2_launch)/launch/openni2.launch" >
    <arg name="camera" value="kinect_head" />
    <arg name="rgb_frame_id" value="head_mount_kinect_rgb_optical_frame" />
    <arg name="depth_frame_id" value="head_mount_kinect_ir_optical_frame" />
    <arg name="load_driver" value="false" />
    <arg name="debayer_processing" value="true" />
    <arg name="depth_registration" value="false" />
    <arg name="depth" value="depth_registered" />
    <remap from="/kinect_head/depth_registered/image_raw" to="/kinect_head/depth/image_raw" />
  </include>

  <group ns="kinect_head/depth_registered">
    <node name="image_rect_view"
          pkg="image_view" type="image_view">
      <remap from="image" to="sw_registered/image_rect" />
      <remap from="~output" to="~" />
      <rosparam>
        gui: false
        min_image_value: 0.5
        max_image_value: 1.2
        colormap: 2
      </rosparam>
    </node>
  </group>

  <!-- obj_y -->
  <group ns="obj_y" if="$(arg obj_y)">
    <node name="data_collection_server"
          pkg="jsk_data" type="data_collection_server.py"
          clear_params="true" output="screen">
      <rosparam subst_value="true">
        save_dir: $(arg save_dir)/obj_y
        topics:
          - name: /kinect_head/rgb/camera_info
            msg_class: sensor_msgs/CameraInfo
            fname: camera_info.yaml
            savetype: YAML
          - name: /kinect_head/rgb/image_rect_color
            msg_class: sensor_msgs/Image
            fname: rgb_obj_y.jpg
            savetype: ColorImage
          - name: /kinect_head/depth_registered/sw_registered/image_rect
            msg_class: sensor_msgs/Image
            fname: depth_obj_y.npz
            savetype: DepthImage
          - name: /obj_y/tf_to_transform/output
            msg_class: geometry_msgs/TransformStamped
            fname: tf_base_to_camera.yaml
            savetype: YAML
      </rosparam>
    </node>

    <node name="tf_to_transform"
          pkg="jsk_topic_tools" type="tf_to_transform.py">
      <rosparam>
        parent_frame_id: base_link
        child_frame_id: head_mount_kinect_rgb_optical_frame
        duration: 1
        rate: 30
      </rosparam>
    </node>

    <node name="save_image"
          pkg="recognition_3d" type="save-image.l"
          output="screen">
    </node>

    <node name="rqt_yn_btn"
          pkg="jsk_rqt_plugins" type="rqt_yn_btn">
      <remap from="~" to="rviz/yes_no_button" />
    </node>
  </group>

  <!-- obj_n -->
  <group ns="obj_n" unless="$(arg obj_y)">
    <node name="data_collection_server"
          pkg="jsk_data" type="data_collection_server.py"
          clear_params="true" output="screen">
      <rosparam subst_value="true">
        save_dir: $(arg save_dir)/obj_n
        topics:
          - name: /kinect_head/rgb/camera_info
            msg_class: sensor_msgs/CameraInfo
            fname: camera_info.yaml
            savetype: YAML
          - name: /kinect_head/rgb/image_rect_color
            msg_class: sensor_msgs/Image
            fname: rgb_obj_n.jpg
            savetype: ColorImage
          - name: /kinect_head/depth_registered/sw_registered/image_rect
            msg_class: sensor_msgs/Image
            fname: depth_obj_n.npz
            savetype: DepthImage
          - name: /obj_n/tf_to_transform/output
            msg_class: geometry_msgs/TransformStamped
            fname: tf_base_to_camera.yaml
            savetype: YAML
      </rosparam>
    </node>

    <node name="tf_to_transform"
          pkg="jsk_topic_tools" type="tf_to_transform.py">
      <rosparam>
        parent_frame_id: base_link
        child_frame_id: head_mount_kinect_rgb_optical_frame
        duration: 1
        rate: 30
      </rosparam>
    </node>

    <node name="save_image"
          pkg="recognition_3d" type="save-image.l"
          output="screen">
    </node>

    <node name="rqt_yn_btn"
          pkg="jsk_rqt_plugins" type="rqt_yn_btn">
      <remap from="~" to="rviz/yes_no_button" />
    </node>
  </group>

  <node name="rviz"
        pkg="rviz" type="rviz"
        args="-d $(find recognition_3d)/rvizconfig/pr2_kinect.rviz">
  </node>

</launch>
